# .github/workflows/docker-auto-version.yml
name: Docker Build & Version Tag

on:
  push:
    branches:
      - main

jobs:
  version-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # needed to create and push tags

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Determine and bump version
        id: version
        run: |
          VERSION=$(cat VERSION)
          echo "Current version: $VERSION"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          # Default bump type
          BUMP_TYPE="patch"

          # Get PR labels (if this was triggered by a PR)
          LABELS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.event.pull_request._links.self.href }}/labels" | jq -r '.[].name')

          if echo "$LABELS" | grep -q "semver:major"; then
            BUMP_TYPE="major"
          elif echo "$LABELS" | grep -q "semver:minor"; then
            BUMP_TYPE="minor"
          fi

          echo "Bump type: $BUMP_TYPE"

          if [[ "$BUMP_TYPE" == "major" ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$BUMP_TYPE" == "minor" ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "$NEW_VERSION" > VERSION

          echo "version=$NEW_VERSION" >> "$GITHUB_OUTPUT"


      - name: Commit and push updated version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git add VERSION
          git commit -m "Bump version to ${{ steps.version.outputs.version }}"
          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin main --follow-tags

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Go Image
        run: |
          docker build -t youruser/go-service:${{ steps.version.outputs.version }} -f golang/Dockerfile ./golang
          docker push youruser/go-service:${{ steps.version.outputs.version }}

      - name: Build and Push FastAPI Image
        run: |
          docker build -t youruser/fastapi-service:${{ steps.version.outputs.version }} -f fastapi/Dockerfile ./fastapi
          docker push youruser/fastapi-service:${{ steps.version.outputs.version }}
